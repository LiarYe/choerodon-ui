{
  "title": {
    "zh": "中文分类",
    "en": "Category"
  },
  "demos": [
    {
      "filename": "basic.js",
      "title": {
        "zh": "基本",
        "en": "Basic"
      },
      "description": {
        "zh": "基本滑动条。当 `range` 为 `true` 时，渲染为双滑块。当 `disabled` 为 `true` 时，滑块处于不可用状态。\n",
        "en": "Basic slider. When `range` is `true`, display as dual thumb mode. When `disable` is `true`, the slider will not be interactable.\n"
      },
      "order": 0,
      "height": 180,
      "screenshot": ""
    },
    {
      "filename": "input-number.js",
      "title": {
        "zh": "带输入框的滑块",
        "en": "Slider with InputNumber"
      },
      "description": {
        "zh": "和 [数字输入框](/components/input-number/) 组件保持同步。\n",
        "en": "Synchronize with [InptNumber](/components/input-number/) component.\n"
      },
      "order": 1,
      "height": 180,
      "screenshot": ""
    },
    {
      "filename": "icon-slider.js",
      "title": {
        "zh": "带 icon 的滑块",
        "en": "Slider with icon"
      },
      "description": {
        "zh": "滑块左右可以设置图标来表达业务含义。\n",
        "en": "You can add an icon beside the slider to make it meaningful.\n"
      },
      "order": 2,
      "height": 170,
      "screenshot": ""
    },
    {
      "filename": "tip-formatter.js",
      "title": {
        "zh": "自定义提示",
        "en": "Customerize tooltip"
      },
      "description": {
        "zh": "使用 `tipFormatter` 可以格式化 `Tooltip` 的内容，设置 `tipFormatter={null}`，则隐藏 `Tooltip`。\n",
        "en": "Use `tipFormatter` to format content of `Toolip`. If `tipFormatter` is null, hide it.\n"
      },
      "order": 3,
      "height": 160,
      "screenshot": ""
    },
    {
      "filename": "event.js",
      "title": {
        "zh": "事件",
        "en": "Event"
      },
      "description": {
        "zh": "当 Slider 的值发生改变时，会触发 `onChange` 事件，并把改变后的值作为参数传入。在 `onmouseup` 时，会触发 `onAfterChange` 事件，并把当前值作为参数传入。\n",
        "en": "The `onChange` callback function will fire when the user changes the slider's value. The `onAfterChange` callback function will fire when `onmouseup` fired.\n"
      },
      "order": 4,
      "height": 180,
      "screenshot": ""
    },
    {
      "filename": "mark.js",
      "title": {
        "zh": "带标签的滑块",
        "en": "Graduated slider"
      },
      "description": {
        "zh": "使用 `marks` 属性标注分段式滑块，使用 `value` / `defaultValue` 指定滑块位置。当 `included=false` 时，表明不同标记间为并列关系。当 `step=null` 时，Slider 的可选值仅有 `marks` 标出来的部分。\n",
        "en": "Using `marks` property to mark a graduated slider, use `value` or `defaultValue` to specify the position of thumb.\nWhen `included` is false, means that different thumbs are coordinative.\nwhen `step` is null, users can only slide the thumbs onto marks.\n\n"
      },
      "order": 5,
      "height": 513,
      "screenshot": ""
    },
    {
      "filename": "vertical.js",
      "title": {
        "zh": "垂直",
        "en": "Vertical"
      },
      "description": {
        "zh": "垂直方向的 Slider，需配置滑块组件或包裹容器自身高度样式。\n",
        "en": "The vertical Slider, the height style of the slider assembly or the package container itself needs to be configured.\n"
      },
      "ignores": ["theme1", "theme3", "theme4"],
      "order": 6,
      "height": 390,
      "screenshot": ""
    }
  ]
}
